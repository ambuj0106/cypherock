#include<bits/stdc++.h>
//#include"C:\Users\AMBUJ\AppData\Roaming\Sublime Text 3\Packages\User\BTC_btc.h"
using namespace std;
typedef struct 
{
    uint8_t previous_txn_hash[32];
    uint8_t previous_output_index[4];
    uint8_t script_length[1];
    uint8_t script_public_key[25];
    uint8_t sequence[4];
}unsigned_txn_input;

typedef struct 
{
    uint8_t previous_txn_hash[32];
    uint8_t previous_output_index[4];
    uint8_t script_length[1];
    uint8_t script_sig[128];
    uint8_t sequence[4];
}signed_txn_input;

typedef struct 
{
    uint8_t value[8];
    uint8_t script_length[1];
    uint8_t script_public_key[25];
}txn_output;

typedef struct 
{
    uint8_t network_version[4];
    uint8_t input_count[1];
    unsigned_txn_input *input;
    uint8_t output_count[1];
    txn_output *output;
    uint8_t locktime[4];
    uint8_t sighash[4];

}unsigned_txn;

int main()
{
  string s;
  char a;
 
  cin>>s;
  int n=s.size();
  vector<uint8_t> data(s.begin(),s.end());
  int i=0;
  unsigned_txn utt[n/4+1];

  for(int i=0;i<n/4;i++)
  {
  for(int j=0;i<4;j++)
   utt[i].network_version[j]=data[i++];
  
  cout<<(char)utt[i].network_version[0]<<endl;
  
  }

  return 0;


}
